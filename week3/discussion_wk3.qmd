---
title: "Discussion Week 3"
name: "Rachel Spellenberg"
date: "1/24/2024"
---

## Homework 2

-   hw is posted and due in 10 days
-   focuses on data wrangling

## Review from Lecture

-   How are you going to craft the answer to that question
-   color palette for that visualization

## Plots

### Histograms

-   bin size matters; when the bins are too course you can't tell the difference between the spread of different variables
-   reducing bin size gives you smaller bin size and more variability/volatility
-   best to find a goldie locks size that splits the difference; the right balance depends on what purpose you are trying to accomplish

### Density Plots

-   there is a value for each value on the x-axis
-   x-axis is less manipulatable than the histogram
-   more accurate depiction of how data is spread

When to use histograms or density plots?
- laboratory settings use histograms

## Ridgeline Plots
- trends over time
- clarify overlaps well

## Boxplot
- line in the middle is the median
- median is the 50th percentile
- difference between percent and percentile
- doesn't show density

## Violin Plot
- shows dist/density of data
- can overlay boxplot and violin so that you get the best of both worlds; shows median and other stats while showing density spread


## Activity: Drought Area in California
- pick a plot
- pick dependent and independent variable

```{r}
# load packages ----
library(tidyverse)

# import data ----
tuesdata <- tidytuesdayR::tt_load('2021-07-20')
drought <- tuesdata$drought

# data wrangling ----
drought_mod <- drought %>% 
  select(valid_end, state_abb, pop_total) %>% 
  filter(state_abb %in% c("AK", "WA", "OR", "CA"))

# plot that shit
ggplot(drought_mod, aes(x = valid_end, y = pop_total, fill = state_abb)) +
  
  geom_violin()
```
## Sam's Example
- stacked area plot vs stacked bar plot
- stacked barplot is good to save space, but isn't good for getting exact numbers
- stacked area plot also saves place and is hard to get exact numbers

Sam's Data Wrangling Strategy
```{r}
drought_clean <- drought |>

  # select cols of interest & update names as needed ----
  select(date = valid_start, state_abb, drought_lvl, area_pct) |> 

  # add year, month & day cols using {lubridate} fxns ----
  mutate(year = year(date),
         month = month(date, label = TRUE, abbr = TRUE),
         day = day(date)) |>

  # add drought level conditions names ----
  mutate(drought_lvl_long = factor(drought_lvl,
                            levels = c("D4", "D3", "D2", "D1","D0", "None"),
                            labels = c("(D4) Exceptional", "(D3) Extreme",
                                       "(D2) Severe", "(D1) Moderate", "(D0) Abnormally Dry", 
                                       "No Drought"))) |>
  
  # reorder cols ----
  select(date, year, month, day, state_abb, drought_lvl, drought_lvl_long, area_pct)

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##       create stacked area plot of CA drought conditions through time     ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

drought_clean |> 
  
  # remove drought_lvl "None" & filter for just CA ----
  filter(drought_lvl != "None",
         state_abb == "CA") |> 
  
  # create ggplot ----
  ggplot(mapping = aes(x = date, y = area_pct, fill = drought_lvl_long)) +
  
  # reverse order of groups so level D4 is closest to x-axis ----
  geom_area(position = position_stack(reverse = TRUE)) +
  
  # update colors to match US Drought Monitor (colors selected using ColorPick Eyedropper from original USDM data viz) ----
  scale_fill_manual(values = c("#853904", "#FF0000", "#FFC100", "#FFD965", "#FFFF00")) +
  
  # set x-axis breaks & remove padding between data and x-axis ----
  scale_x_date(breaks = scales::breaks_pretty(n = 10),
               expand = c(0, 0)) +

  # set y-axis breaks & convert values to percentages & & remove padding between data and y-axis----
  scale_y_continuous(breaks = seq(0, 100, by = 10),
                     labels = scales::label_percent(scale = 1),
                     expand = c(0, 0)) +
  
  # add title ----
  labs(title = "Drought area in California") 

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##            BONUS: using {geofacet} to plot data for all states           ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#......remove HI & AK (no data) and also DC from preset grid.....
mygrid <- geofacet::us_state_grid1 |>
  filter(!code %in% c("DC", "HI", "AK"))

#..............................plot..............................

# NOTE: this takes a minute to render!

drought_clean |> 
  filter(drought_lvl != "None") |> 
  ggplot(aes(x = date, y = area_pct, fill = drought_lvl_long)) +
  geom_area(position = position_stack(reverse = TRUE)) +
  geofacet::facet_geo(~state_abb, grid = mygrid) +
  scale_fill_manual(values = c("#853904", "#FF0000", "#FFC100", "#FFD965", "#FFFF00"))
```
edge_color
